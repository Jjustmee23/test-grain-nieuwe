version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_HOST=45.154.238.114
      - DB_PORT=5433
      - DB_NAME=testdb
      - DB_USER=testuser
      - DB_PASSWORD=testpassword
      - DJANGO_DISABLE_MIGRATIONS=False
      - DJANGO_SETTINGS_MODULE=config.settings
    depends_on:
      - postgres
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    restart: unless-stopped

  raw-data-sync:
    build: .
    env_file:
      - .env
    environment:
      - DB_HOST=45.154.238.114
      - DB_PORT=5433
      - DB_NAME=testdb
      - DB_USER=testuser
      - DB_PASSWORD=testpassword
      - DJANGO_DISABLE_MIGRATIONS=False
      - DJANGO_SETTINGS_MODULE=config.settings
    depends_on:
      - postgres
    volumes:
      - .:/app
    restart: unless-stopped
    command: python manage.py raw_data_sync_daemon --interval 300 --log-level INFO
    profiles:
      - sync

  postgres:
    image: postgres:17
    container_name: app_postgres
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: testdb
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  counter-postgres:
    image: postgres:17
    container_name: app_counter_postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: counter
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - counter_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d counter"]
      interval: 30s
      timeout: 10s
      retries: 3

  counter-postgres:
    image: postgres:17
    container_name: app_counter_postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: counter
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - counter_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d counter"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_test:
  counter_postgres_data:
  static_volume:


